% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optionalInput.R
\name{updateOptionalSelectInput}
\alias{updateOptionalSelectInput}
\title{Update \code{optionalSelectInput}}
\usage{
updateOptionalSelectInput(
  session,
  inputId,
  label = NULL,
  selected = NULL,
  choices = NULL
)
}
\arguments{
\item{session}{The session object passed to function given to shinyServer.}

\item{inputId}{The id of the input object.}

\item{label}{Display a text in the center of the switch.}

\item{selected}{The new selected value (or multiple values if \code{multiple = TRUE}).
To reset selected value, in case of multiple picker, use \code{character(0)}.}

\item{choices}{List of values to select from. If elements of the list are named
then that name rather than the value is displayed to the user.}
}
\value{
\code{NULL}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
}
\examples{
library(shiny)

app <- shinyApp(
  ui = fluidPage(
    optionalSelectInput(inputId = "choices", label = "choices", choices = letters, multiple = TRUE),
    optionalSelectInput(
      inputId = "selected",
      label = "select from choices",
      choices = NULL
    ),
    verbatimTextOutput(outputId = "out")
  ),
  server = function(input, output, session) {
    observeEvent(input$choices, {
      updateOptionalSelectInput(
        session = session,
        inputId = "selected",
        choices = input$choices,
        selected = input$choices
      )
    })
  }
)
if (interactive()) {
  runApp(app)
}
}
