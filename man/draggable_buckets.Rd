% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draggable_buckets.R
\name{draggable_buckets}
\alias{draggable_buckets}
\title{Draggable Buckets}
\usage{
draggable_buckets(input_id, label, elements = character(), buckets)
}
\arguments{
\item{input_id}{(\code{character(1)}) the \code{HTML} id of this widget}

\item{label}{(\code{character(1)} or \code{shiny.tag}) the header of this widget}

\item{elements}{(\code{character}) the elements to drag into buckets}

\item{buckets}{(\code{character} or \code{list}) the names of the buckets the elements can be put in or a list of key-pair
values where key is a name of a bucket and value is a character vector of elements in a bucket}
}
\value{
the \code{HTML} code comprising an instance of this widget
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
A custom widget with draggable elements that can be put into buckets.
}
\examples{
ui <- shiny::fluidPage(
  draggable_buckets("id", "Choices #1", c("a", "b"), c("bucket1", "bucket2")),
  draggable_buckets("id2", "Choices #2", letters, c("vowels", "consonants")),
  shiny::verbatimTextOutput("out"),
  shiny::verbatimTextOutput("out2")
)
server <- function(input, output) {
  shiny::observeEvent(list(input$id, input$id2), {
    print(shiny::isolate(input$id))
    print(shiny::isolate(input$id2))
  })
  output$out <- shiny::renderPrint(input$id)
  output$out2 <- shiny::renderPrint(input$id2)
}
if (interactive()) shiny::shinyApp(ui, server)

# With default elements in the bucket
ui <- shiny::fluidPage(
  draggable_buckets("id", "Choices #1", c("a", "b"), list(bucket1 = character(), bucket2 = c("c"))),
  shiny::verbatimTextOutput("out")
)
server <- function(input, output) {
  shiny::observeEvent(input$id, {
    print(shiny::isolate(input$id))
  })
  output$out <- shiny::renderPrint(input$id)
}
if (interactive()) shiny::shinyApp(ui, server)
}
