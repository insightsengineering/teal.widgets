[{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üíª Coding guidelines üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"coding-guidelines","dir":"","previous_headings":"","what":"Coding guidelines","title":"Contribution Guidelines","text":"repository follows unified processes standards adopted maintainers ensure software development carried consistently within teams cohesively across repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"Coding guidelines","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"dependency-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency management","title":"Contribution Guidelines","text":"Lightweight right weight. repository follows tinyverse recommedations limiting dependencies minimum.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"dependency-version-management","dir":"","previous_headings":"Coding guidelines","what":"Dependency version management","title":"Contribution Guidelines","text":"code compatible (!) historical versions given dependenct package, required specify minimal version DESCRIPTION file. particular: development version requires (imports) development version another package - required put abc (>= 1.2.3.9000).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Coding guidelines > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/articles/custom-basic-table-arguments.html","id":"section-example---single-table-module","dir":"Articles","previous_headings":"","what":"Example - Single-Table Module","title":"Custom basic_table arguments module","text":"","code":"library(shiny) library(teal.widgets) library(magrittr)  options(\"teal.basic_table_args\" = basic_table_args(title = \"ENV_TITLE\"))  basic_table_args <- list(   default = basic_table_args(prov_footer = \"USER_FOOTER\"),   table1 = basic_table_args(subtitles = \"USER_SUBTITLES_TABLE1\"),   table2 = basic_table_args(subtitles = \"USER_SUBTITLES_TABLE2\") )   ui <- fluidPage(   shinyjs::useShinyjs(),   tags$div(verbatimTextOutput(\"table1\")) )  server <- function(input, output, session) {   dev_table_args <- basic_table_args(show_colcounts = TRUE)    table_expr <- substitute(     expr = {       tt <- f_table_expr %>%         rtables::split_cols_by(\"Species\") %>%         rtables::analyze(vars = \"Sepal.Length\", afun = function(x) {           rtables::in_rows(             \"Mean\" = rtables::rcell(mean(x), format = \"xx.xx\"),             \"Range\" = rtables::rcell(range(x), format = \"xx.xx - xx.xx\")           )         })       table2 <- rtables::build_table(tt, iris)       table2     },     env = list(f_table_expr = parse_basic_table_args(       resolve_basic_table_args(         user_table = basic_table_args$table2,         user_default = basic_table_args$default,         module_table = dev_table_args       )     ))   )   output$table1 <- renderPrint(eval(table_expr)) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/articles/custom-ggplot2-arguments.html","id":"section-additional-topics","dir":"Articles","previous_headings":"","what":"Additional topics","title":"Custom `ggplot2` arguments module","text":"complex ggplot2 object used inside ggplot2_args function, base::quote function prevent object expansion Show R Code. example ggplot2::element_text function returns complex object, use code like ggplot2_args(theme = list(plot.title = quote(ggplot2::element_text(size = 20)))) prevent Show R Code expansion. get promise already evaluation: recursive default argument reference earlier problems? error, probably function argument name function input . solve problem please use :: prefix directly specific package, like new_fun <- function(ggplot2_args = ggplot2_args()).","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/articles/custom-ggplot2-arguments.html","id":"section-loading-libraries-and-data","dir":"Articles","previous_headings":"","what":"Loading libraries and data","title":"Custom `ggplot2` arguments module","text":"","code":"library(shiny) library(ggplot2) library(teal.widgets)  options(\"teal.ggplot2_args\" = ggplot2_args(labs = list(caption = \"Caption from options\")))  user_ggplot2_args <- list(   default = ggplot2_args(     labs = list(title = \"User default title\"),     theme = list(legend.position = \"right\", legend.direction = \"vertical\")   ),   plot1 = ggplot2_args(     labs = list(title = \"User title\"),     theme = list(legend.position = \"right\", legend.direction = \"vertical\")   ) )  ui <- fluidPage(   shinyjs::useShinyjs(),   tags$div(plotOutput(\"plot1\")) )  server <- function(input, output, session) {   dev_ggplot2_args <- ggplot2_args(     labs = list(subtitle = \"Dev substitle\"),     theme = list(legend.position = \"none\")   )    f_ggplot2_expr <- parse_ggplot2_args(     resolve_ggplot2_args(       user_plot = user_ggplot2_args$plot1,       user_default = user_ggplot2_args$default,       module_plot = dev_ggplot2_args     )   )    plot_expr <- substitute(     expr = {       gg <- ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, color = Species)) +         geom_point() +         ggplot_expr_labs +         ggplot_expr_theme       print(gg)     },     env = list(ggplot_expr_labs = f_ggplot2_expr$labs, ggplot_expr_theme = f_ggplot2_expr$theme)   )   print(plot_expr)   output$plot1 <- renderPlot(eval(plot_expr)) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Pawel Rucki. Author. Mahmoud Hallal. Author. Nikolas Burkoff. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Junlue Zhao. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Rucki P, Hallal M, Burkoff N, Nasinski M, Pagacz K, Zhao J (2025). teal.widgets: 'shiny' Widgets 'teal' Applications. R package version 0.4.3.9016, https://insightsengineering.github.io/teal.widgets/.","code":"@Manual{,   title = {teal.widgets: 'shiny' Widgets for 'teal' Applications},   author = {Dawid Kaledkowski and Pawel Rucki and Mahmoud Hallal and Nikolas Burkoff and Maciej Nasinski and Konrad Pagacz and Junlue Zhao},   year = {2025},   note = {R package version 0.4.3.9016},   url = {https://insightsengineering.github.io/teal.widgets/}, }"},{"path":"https://insightsengineering.github.io/teal.widgets/index.html","id":"tealwidgets","dir":"","previous_headings":"","what":"shiny Widgets for teal Applications","title":"shiny Widgets for teal Applications","text":"package provides various widgets teal applications. Examples include: standard_layout standard UI layout output right encoding panel left plot_with_settings standard plot output UI resizing downloading options table_with_setting standard rtables output UI download pagination options ggplot2_args standard ggplot2 output plot graphic options basic_table_args standard rtables output table graphic options","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"shiny Widgets for teal Applications","text":"Alternatively, might want use development version.","code":"install.packages('teal.widgets') # install.packages(\"pak\") pak::pak(\"insightsengineering/teal.widgets\")"},{"path":"https://insightsengineering.github.io/teal.widgets/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"shiny Widgets for teal Applications","text":"understand use package, please refer package website, provides multiple examples code usage.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"shiny Widgets for teal Applications","text":"encounter bug feature request - please file issue. questions, discussions staying date, please use ‚Äúteal‚Äù channel pharmaverse slack workspace.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/apply_plot_modifications.html","id":null,"dir":"Reference","previous_headings":"","what":"This function checks the plot type and applies specific modifications to the plot object based on the provided parameters. ‚Äî apply_plot_modifications","title":"This function checks the plot type and applies specific modifications to the plot object based on the provided parameters. ‚Äî apply_plot_modifications","text":"function checks plot type applies specific modifications plot object based provided parameters.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/apply_plot_modifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function checks the plot type and applies specific modifications to the plot object based on the provided parameters. ‚Äî apply_plot_modifications","text":"","code":"apply_plot_modifications(plot_obj, plot_type, dblclicking, ranges)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/apply_plot_modifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function checks the plot type and applies specific modifications to the plot object based on the provided parameters. ‚Äî apply_plot_modifications","text":"plot_obj original plot object. plot_type type plot, either gg (ggplot2) grob (grid, graphics). dblclicking logical value indicating whether double-clicking data points main plot enabled disabled. ranges list containing x y values ranges.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/basic_table_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds a basic_table_args object ‚Äî basic_table_args","title":"Builds a basic_table_args object ‚Äî basic_table_args","text":"function used build input basic_table_args argument. basic_table_args argument part every module contains rtables object. Arguments validated match rtables equivalents. details see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/basic_table_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds a basic_table_args object ‚Äî basic_table_args","text":"","code":"basic_table_args(...)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/basic_table_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds a basic_table_args object ‚Äî basic_table_args","text":"... arguments compatible rtables::basic_table().","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/basic_table_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds a basic_table_args object ‚Äî basic_table_args","text":"(basic_table_args) object.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/basic_table_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Builds a basic_table_args object ‚Äî basic_table_args","text":"","code":"basic_table_args(subtitles = \"SUBTITLE\") #> $subtitles #> [1] \"SUBTITLE\" #>  #> attr(,\"class\") #> [1] \"basic_table_args\""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/button_click_observer.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a shiny observer handling button clicks. ‚Äî button_click_observer","title":"Creates a shiny observer handling button clicks. ‚Äî button_click_observer","text":"button clicked pop modal window text.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/button_click_observer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a shiny observer handling button clicks. ‚Äî button_click_observer","text":"","code":"button_click_observer(   click_event,   copy_button_id,   copied_area_id,   modal_title,   modal_content,   disabled )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/button_click_observer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a shiny observer handling button clicks. ‚Äî button_click_observer","text":"click_event reactive click event copy_button_id (character(1)) id button copy modal content. Automatically appended 1 2 suffix top bottom buttons respectively. copied_area_id (character(1)) id element contents copied modal_title (character(1)) title modal window modal_content (reactive) content modal window disabled (reactive(1)) shiny reactive value holding logical. popup button disabled flag TRUE enabled otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/clean_brushedPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean brushed points ‚Äî clean_brushedPoints","title":"Clean brushed points ‚Äî clean_brushedPoints","text":"Cleans organizes output account NAs remove empty rows. Wrapper around shiny::brushedPoints.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/clean_brushedPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean brushed points ‚Äî clean_brushedPoints","text":"","code":"clean_brushedPoints(data, brush)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/clean_brushedPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean brushed points ‚Äî clean_brushedPoints","text":"data (data.frame) data.frame select rows. brush (list) data brush e.g. input$plot_brush.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/clean_brushedPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean brushed points ‚Äî clean_brushedPoints","text":"data.frame selected rows.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/clean_brushedPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean brushed points ‚Äî clean_brushedPoints","text":"","code":"brush <- list(   mapping = list(     x = \"AGE\",     y = \"BMRKR1\"   ),   xmin = 30, xmax = 40,   ymin = 0.7, ymax = 10,   direction = \"xy\" )  data <- data.frame(   STUDYID = letters[1:20],   USUBJID = LETTERS[1:20],   AGE = sample(25:40, size = 20, replace = TRUE),   BMRKR1 = runif(20, min = 0, max = 12) ) nrow(clean_brushedPoints(data, brush)) #> [1] 12 data$AGE[1:10] <- NA nrow(clean_brushedPoints(data, brush)) #> [1] 8"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":null,"dir":"Reference","previous_headings":"","what":"Draggable Buckets ‚Äî draggable_buckets","title":"Draggable Buckets ‚Äî draggable_buckets","text":"custom widget draggable elements can put buckets.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draggable Buckets ‚Äî draggable_buckets","text":"","code":"draggable_buckets(input_id, label, elements = character(), buckets)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draggable Buckets ‚Äî draggable_buckets","text":"input_id (character(1)) HTML id widget label (character(1) shiny.tag) header widget elements (character) elements drag buckets buckets (character list) names buckets elements can put list key-pair values key name bucket value character vector elements bucket","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draggable Buckets ‚Äî draggable_buckets","text":"HTML code comprising instance widget","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draggable Buckets ‚Äî draggable_buckets","text":"shinyvalidate validation can used widget. See example .","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/draggable_buckets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draggable Buckets ‚Äî draggable_buckets","text":"","code":"library(shiny)  ui <- bslib::page_fluid(   draggable_buckets(\"id\", \"Choices #1\", c(\"a\", \"b\"), c(\"bucket1\", \"bucket2\")),   draggable_buckets(\"id2\", \"Choices #2\", letters, c(\"vowels\", \"consonants\")),   verbatimTextOutput(\"out\"),   verbatimTextOutput(\"out2\") ) server <- function(input, output) {   iv <- shinyvalidate::InputValidator$new()   iv$add_rule(     \"id\",     function(data) if (length(data[[\"bucket1\"]]) == 0) \"There should be stuff in bucket 1\"   )   iv$enable()    observeEvent(list(input$id, input$id2), {     print(isolate(input$id))     print(isolate(input$id2))   })   output$out <- renderPrint({     iv$is_valid()     input$id   })   output$out2 <- renderPrint(input$id2) } if (interactive()) shinyApp(ui, server)  # With default elements in the bucket ui <- bslib::page_fluid(   draggable_buckets(\"id\", \"Choices #1\", c(\"a\", \"b\"), list(bucket1 = character(), bucket2 = c(\"c\"))),   verbatimTextOutput(\"out\") ) server <- function(input, output) {   observeEvent(input$id, {     print(isolate(input$id))   })   output$out <- renderPrint(input$id) } if (interactive()) shinyApp(ui, server)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_choices_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"Extract labels choices basing attributes names","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_choices_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"","code":"extract_choices_labels(choices, values = NULL)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_choices_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"choices (list vector) select choices values optional choices subset labels extracted, NULL choices.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_choices_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract labels from choices basing on attributes and names ‚Äî extract_choices_labels","text":"(character) vector labels","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_raw_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw values from choices ‚Äî extract_raw_choices","title":"Extract raw values from choices ‚Äî extract_raw_choices","text":"Extract raw values choices","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_raw_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw values from choices ‚Äî extract_raw_choices","text":"","code":"extract_raw_choices(choices, sep)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_raw_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw values from choices ‚Äî extract_raw_choices","text":"choices (choices_labeled, list character) object containing choices sep (character(1)) separator string split choices selected inputs values different columns.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/extract_raw_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw values from choices ‚Äî extract_raw_choices","text":"choices simplified","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/format_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats the content of the modal popup window. ‚Äî format_content","title":"Formats the content of the modal popup window. ‚Äî format_content","text":"Formats content modal popup window.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/format_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats the content of the modal popup window. ‚Äî format_content","text":"","code":"format_content(verbatim_content, style = FALSE)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/format_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats the content of the modal popup window. ‚Äî format_content","text":"verbatim_content (character, expression, condition reactive(1) holding ) content show popup modal window style (logical(1)) whether style verbatim_content using styler::style_text. verbatim_content condition reactive holding condition argument ignored","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/format_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats the content of the modal popup window. ‚Äî format_content","text":"reactive formatted content","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/format_content.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formats the content of the modal popup window. ‚Äî format_content","text":"Formats content: concatenates needed styles style TRUE","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/get_dt_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Map lenghtMenu property ‚Äî get_dt_rows","title":"Map lenghtMenu property ‚Äî get_dt_rows","text":"Maps lengthMenu selected value property DT::datatable shiny variable.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/get_dt_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map lenghtMenu property ‚Äî get_dt_rows","text":"","code":"get_dt_rows(dt_name, dt_rows)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/get_dt_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map lenghtMenu property ‚Äî get_dt_rows","text":"dt_name ns() inputId DT::datatable dt_rows ns() inputId variable holds current selected value lengthMenu","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/get_dt_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map lenghtMenu property ‚Äî get_dt_rows","text":"(shiny::tagList) shiny tagList.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/get_dt_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map lenghtMenu property ‚Äî get_dt_rows","text":"","code":"library(shiny) library(DT)  ui <- function(id) {   ns <- NS(id)   tagList(     get_dt_rows(ns(\"data_table\"), ns(\"dt_rows\")),     textOutput(ns(\"rows\")),     DT::DTOutput(ns(\"data_table\"))   ) }  # use the input$dt_rows in the Shiny Server function server <- function(id) {   moduleServer(id, function(input, output, session) {     output$data_table <- DT::renderDataTable(iris)     # Change rows selected to see the first line on the UI change     rows <- reactive({       paste0(\"Selected Rows \", input$dt_rows)     })     output$rows <- renderText(rows())   }) } if (interactive()) {   shinyApp(     ui = ui(\"my_table_module\"),     server = function(input, output, session) server(\"my_table_module\")   ) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/ggplot2_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates ggplot2_args object ‚Äî ggplot2_args","title":"Creates ggplot2_args object ‚Äî ggplot2_args","text":"Constructor ggplot2_args class objects. ggplot2_args argument part every module contains ggplot2 graphics. function arguments validated match ggplot2 equivalents. details see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/ggplot2_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates ggplot2_args object ‚Äî ggplot2_args","text":"","code":"ggplot2_args(labs = list(), theme = list())"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/ggplot2_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates ggplot2_args object ‚Äî ggplot2_args","text":"labs (named list) fields match ggplot2::labs() arguments. theme (named list) fields match ggplot2::theme() arguments.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/ggplot2_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates ggplot2_args object ‚Äî ggplot2_args","text":"(ggplot2_args) object.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/ggplot2_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates ggplot2_args object ‚Äî ggplot2_args","text":"","code":"ggplot2_args(   labs = list(title = \"TITLE\"),   theme = list(title = ggplot2::element_text(size = 20)) ) #> $labs #> $labs$title #> [1] \"TITLE\" #>  #>  #> $theme #> $theme$title #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : num 20 #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #>  #> attr(,\"class\") #> [1] \"ggplot2_args\""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/nested_closeable_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","title":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","text":"Alternative shiny::modalDialog. Create nested modal popup can shown/hidden using jQuery modal id, without disturbing parent modal.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/nested_closeable_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","text":"","code":"nested_closeable_modal(id, ..., modal_args = list(easyClose = TRUE))"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/nested_closeable_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","text":"id (character(1)) shiny module id component. Note id can used show/hide modal appended jQuery methods show/hide. ... (shiny.tag) shiny UI elements displayed modal UI modal_args (list) optional list arguments shiny::modalDialog function customize modal. easyClose set TRUE default","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/nested_closeable_modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","text":"(shiny.tag) returns HTML shiny module UI can nested modal popup","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/nested_closeable_modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nested Closeable Modal Popup ‚Äî nested_closeable_modal","text":"","code":"library(shiny) library(shinyjs) #>  #> Attaching package: ‚Äòshinyjs‚Äô #> The following object is masked from ‚Äòpackage:shiny‚Äô: #>  #>     runExample #> The following objects are masked from ‚Äòpackage:methods‚Äô: #>  #>     removeClass, show  ui <- bslib::page_fluid(   useShinyjs(),   actionButton(\"show_1\", \"$(\\\"#modal_1\\\").modal(\\\"show\\\")\"),   nested_closeable_modal(     \"modal_1\",     modal_args = list(       size = \"l\",       title = \"First Modal\",       easyClose = TRUE,       footer = NULL     ),     tags$div(       \"This modal can be closed by running\", tags$code(\"$(\\\"#modal_1\\\").modal(\\\"hide\\\")\"),       \"in the JS console!\",       tags$br(),       \"Note that the second modal is placed right within this modal\",       tags$br(),       \"Alternatively, calling the\", tags$code(\"removeModal()\"),       \"will remove all the active modal popups\",       tags$br(), tags$br(),       actionButton(\"show_2\", \"$(\\\"#modal_2\\\").modal(\\\"show\\\")\"),       actionButton(\"hide_1\", \"$(\\\"#modal_1\\\").modal(\\\"hide\\\")\"),       nested_closeable_modal(         id = \"modal_2\",         modal_args = list(           size = \"m\",           title = \"Second Modal\",           footer = NULL,           easyClose = TRUE         ),         tags$div(           \"This modal can be closed by running\", tags$code(\"$(\\\"#modal_1\\\").modal(\\\"hide\\\")\"),           \"in the JS console!\",           \"Note that removing the parent will remove the child.            But, reopening will remember the open state of child\",           actionButton(\"hide_2\", \"$(\\\"#modal_2\\\").modal(\\\"hide\\\")\"),           actionButton(\"hide_all\", \"$(\\\"#modal_1\\\").modal(\\\"hide\\\")\")         )       )     )   ) ) #> Warning: `nested_closeable_modal()` was deprecated in teal.widgets 0.4.4.  server <- function(input, output) {   observeEvent(input$show_1, {     runjs(\"$(\\\"#modal_1\\\").modal(\\\"show\\\")\")   })   observeEvent(input$show_2, {     runjs(\"$(\\\"#modal_2\\\").modal(\\\"show\\\")\")   })   observeEvent(c(input$hide_1, input$hide_all), {     runjs(\"$(\\\"#modal_1\\\").modal(\\\"hide\\\")\")   })   observeEvent(input$hide_2, {     runjs(\"$(\\\"#modal_2\\\").modal(\\\"hide\\\")\")   }) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSelectInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for pickerInput ‚Äî optionalSelectInput","title":"Wrapper for pickerInput ‚Äî optionalSelectInput","text":"Wrapper shinyWidgets::pickerInput() additional features. fixed = TRUE number choices less equal 1 (see fixed_on_single), pickerInput widget hidden non-interactive widget displayed instead. Toggle HTML elements just visual effect avoid displaying pickerInput widget one choice.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSelectInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for pickerInput ‚Äî optionalSelectInput","text":"","code":"optionalSelectInput(   inputId,   label = NULL,   choices = NULL,   selected = NULL,   multiple = FALSE,   sep = NULL,   options = list(),   label_help = NULL,   fixed = FALSE,   fixed_on_single = FALSE,   width = NULL )  updateOptionalSelectInput(   session,   inputId,   label = NULL,   selected = NULL,   choices = NULL )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSelectInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for pickerInput ‚Äî optionalSelectInput","text":"inputId input slot used access value. label Display label control, NULL label. choices List values select . elements list named name rather value displayed user. selected initially selected value (multiple values multiple = TRUE). specified defaults first value single-select lists values multiple select lists. multiple selection multiple items allowed? sep (character(1)) separator string split choices selected inputs values different columns. options List options, see pickerOptions available options. limit number selection possible, see example . label_help (shiny.tag) optional, e.g. object returned shiny::helpText(). fixed (logical(1)) optional, whether block user select choices. fixed_on_single (logical(1)) optional, whether block user select choice one less choice. FALSE, user still able select deselect choice. width (character(1)) width input passed pickerInput  e.g. 'auto', 'fit', '100px' '75%' session (shiny.session)","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSelectInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for pickerInput ‚Äî optionalSelectInput","text":"(shiny.tag) HTML tag pickerInput widget non-interactive element listing selected values.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSelectInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for pickerInput ‚Äî optionalSelectInput","text":"","code":"library(shiny)  ui_grid <- function(...) {   bslib::page_fluid(     bslib::layout_columns(       col_widths = c(4, 4, 4),       ...     )   ) }  ui <- ui_grid(   wellPanel(     optionalSelectInput(       inputId = \"c1\",       label = \"Fixed choices\",       choices = LETTERS[1:5],       selected = c(\"A\", \"B\"),       fixed = TRUE     ),     verbatimTextOutput(outputId = \"c1_out\")   ),   wellPanel(     optionalSelectInput(       inputId = \"c2\",       label = \"Single choice\",       choices = \"A\",       selected = \"A\"     ),     verbatimTextOutput(outputId = \"c2_out\")   ),   wellPanel(     optionalSelectInput(       inputId = \"c3\",       label = \"NULL choices\",       choices = NULL     ),     verbatimTextOutput(outputId = \"c3_out\")   ),   wellPanel(     optionalSelectInput(       inputId = \"c4\",       label = \"Default\",       choices = LETTERS[1:5],       selected = \"A\"     ),     verbatimTextOutput(outputId = \"c4_out\")   ),   wellPanel(     optionalSelectInput(       inputId = \"c5\",       label = \"Named vector\",       choices = c(`A - value A` = \"A\", `B - value B` = \"B\", `C - value C` = \"C\"),       selected = \"A\"     ),     verbatimTextOutput(outputId = \"c5_out\")   ),   wellPanel(     selectInput(       inputId = \"c6_choices\", label = \"Update choices\", choices = letters, multiple = TRUE     ),     optionalSelectInput(       inputId = \"c6\",       label = \"Updated choices\",       choices = NULL,       multiple = TRUE,       fixed_on_single = TRUE     ),     verbatimTextOutput(outputId = \"c6_out\")   ) )  server <- function(input, output, session) {   observeEvent(input$c6_choices, ignoreNULL = FALSE, {     updateOptionalSelectInput(       session = session,       inputId = \"c6\",       choices = input$c6_choices,       selected = input$c6_choices     )   })    output$c1_out <- renderPrint(input$c1)   output$c2_out <- renderPrint(input$c2)   output$c3_out <- renderPrint(input$c3)   output$c4_out <- renderPrint(input$c4)   output$c5_out <- renderPrint(input$c5)   output$c6_out <- renderPrint(input$c6) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Optional Slider Input Widget ‚Äî optionalSliderInput","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"Hidden input widgets useful input[[inputId]] variable available server function corresponding visual clutter input widgets provide single choice.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"","code":"optionalSliderInput(inputId, label, min, max, value, label_help = NULL, ...)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"inputId input slot used access value. label Display label control, NULL label. min, max minimum maximum values (inclusive) can selected. value initial value slider, either number, date (class Date), date-time (class POSIXt). length one vector create regular slider; length two vector create double-ended range slider. Must lie min max. label_help (shiny.tag) optional object class shiny.tag, e.g. object returned shiny::helpText() ... optional arguments sliderInput","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"(shiny.tag) HTML tag sliderInput widget.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"min max NA slider widget hidden","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optional Slider Input Widget ‚Äî optionalSliderInput","text":"","code":"ui <- bslib::page_fluid(   shinyjs::useShinyjs(),   optionalSliderInput(\"s\", \"shown\", 0, 1, 0.2),   optionalSliderInput(\"h\", \"hidden\", 0, NA, 1), ) if (interactive()) {   shiny::shinyApp(ui, function(input, output) {}) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"optionalSliderInput() function needs three arguments determine whether hide sliderInput widget . teal modules specify optional slider input one argument called value_min_max.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"","code":"optionalSliderInputValMinMax(   inputId,   label,   value_min_max,   label_help = NULL,   ... )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"inputId input slot used access value. label Display label control, NULL label. value_min_max (numeric(1) numeric(3)) length 1 value gets set number sliderInput hidden. Otherwise, length three three elements map value, min max optionalSliderInput() function. label_help (shiny.tag) optional object class shiny.tag, e.g. object returned shiny::helpText() ... optional arguments sliderInput","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"(shiny.tag) HTML tag range sliderInput widget.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"teal modules parameterize optionalSliderInput one argument value_min_max","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/optionalSliderInputValMinMax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optional Slider Input with minimal and maximal values ‚Äî optionalSliderInputValMinMax","text":"","code":"ui <- bslib::page_fluid(   shinyjs::useShinyjs(),   optionalSliderInputValMinMax(\"a1\", \"b1\", 1), # Hidden   optionalSliderInputValMinMax(\"a2\", \"b2\", c(3, 1, 5)) # Shown ) if (interactive()) {   shiny::shinyApp(ui, function(input, output) {}) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Panel group widget ‚Äî panel_group","title":"Panel group widget ‚Äî panel_group","text":"Designed group panel_item elements. Used handle shiny inputs encoding panel.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panel group widget ‚Äî panel_group","text":"","code":"panel_group(..., id = NULL)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Panel group widget ‚Äî panel_group","text":"... (shiny.tag) panels created panel_group() id optional, (character)","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Panel group widget ‚Äî panel_group","text":"(shiny.tag)","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Panel group widget ‚Äî panel_group","text":"","code":"library(shiny) panel_group(   panel_item(     title = \"Display\",     collapsed = FALSE,     checkboxGroupInput(       \"check\",       \"Tables display\",       choices = LETTERS[1:3],       selected = LETTERS[1]     ),     radioButtons(       \"radio\",       label = \"Plot type\",       choices = letters[1:2],       selected = letters[1]     )   ),   panel_item(     title = \"Pre-processing\",     radioButtons(       \"filtering\",       \"What to filter\",       choices = LETTERS[1:4],       selected = LETTERS[1]     ),     radioButtons(       \"na_action\",       \"NA action\",       choices = letters[1:3],       selected = letters[1]     )   ) ) #> Warning: `panel_group()` was deprecated in teal.widgets 0.4.3. #> ‚Ñπ The `panel_group()` and `panel_item()` view can be achieved by using the #>   `bslib` package. Please use the `bslib::accordion()` and #>   `bslib::accordion_panel()` functions instead. This function will be removed #>   in the next release. #> Warning: `panel_item()` was deprecated in teal.widgets 0.4.3. #> ‚Ñπ The `panel_group()` and `panel_item()` view can be achieved by using the #>   `bslib` package. Please use the `bslib::accordion()` and #>   `bslib::accordion_panel()` functions instead. This function will be removed #>   in the next release. #> <div class=\"container-fluid\"> #>   <div id=\"bslib-accordion-1180\" class=\"accordion\" data-require-bs-version=\"5\" data-require-bs-caller=\"accordion()\"> #>     <div class=\"accordion-item\" data-value=\"Display\"> #>       <div class=\"accordion-header\"> #>         <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-7554\" aria-controls=\"bslib-accordion-panel-7554\" aria-expanded=\"true\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Display<\/div> #>         <\/button> #>       <\/div> #>       <div id=\"bslib-accordion-panel-7554\" class=\"accordion-collapse collapse show\"> #>         <div class=\"accordion-body\" open=\"TRUE\"> #>           <div id=\"check\" class=\"form-group shiny-input-checkboxgroup shiny-input-container\" role=\"group\" aria-labelledby=\"check-label\"> #>             <label class=\"control-label\" id=\"check-label\" for=\"check\">Tables display<\/label> #>             <div class=\"shiny-options-group\"> #>               <div class=\"checkbox\"> #>                 <label> #>                   <input type=\"checkbox\" name=\"check\" value=\"A\" checked=\"checked\"/> #>                   <span>A<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"checkbox\"> #>                 <label> #>                   <input type=\"checkbox\" name=\"check\" value=\"B\"/> #>                   <span>B<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"checkbox\"> #>                 <label> #>                   <input type=\"checkbox\" name=\"check\" value=\"C\"/> #>                   <span>C<\/span> #>                 <\/label> #>               <\/div> #>             <\/div> #>           <\/div> #>           <div id=\"radio\" class=\"form-group shiny-input-radiogroup shiny-input-container\" role=\"radiogroup\" aria-labelledby=\"radio-label\"> #>             <label class=\"control-label\" id=\"radio-label\" for=\"radio\">Plot type<\/label> #>             <div class=\"shiny-options-group\"> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"radio\" value=\"a\" checked=\"checked\"/> #>                   <span>a<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"radio\" value=\"b\"/> #>                   <span>b<\/span> #>                 <\/label> #>               <\/div> #>             <\/div> #>           <\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>     <div class=\"accordion-item\" data-value=\"Pre-processing\"> #>       <div class=\"accordion-header\"> #>         <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-3239\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-3239\"> #>           <div class=\"accordion-icon\"><\/div> #>           <div class=\"accordion-title\">Pre-processing<\/div> #>         <\/button> #>       <\/div> #>       <div id=\"bslib-accordion-panel-3239\" class=\"accordion-collapse collapse\"> #>         <div class=\"accordion-body\" open=\"FALSE\"> #>           <div id=\"filtering\" class=\"form-group shiny-input-radiogroup shiny-input-container\" role=\"radiogroup\" aria-labelledby=\"filtering-label\"> #>             <label class=\"control-label\" id=\"filtering-label\" for=\"filtering\">What to filter<\/label> #>             <div class=\"shiny-options-group\"> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"filtering\" value=\"A\" checked=\"checked\"/> #>                   <span>A<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"filtering\" value=\"B\"/> #>                   <span>B<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"filtering\" value=\"C\"/> #>                   <span>C<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"filtering\" value=\"D\"/> #>                   <span>D<\/span> #>                 <\/label> #>               <\/div> #>             <\/div> #>           <\/div> #>           <div id=\"na_action\" class=\"form-group shiny-input-radiogroup shiny-input-container\" role=\"radiogroup\" aria-labelledby=\"na_action-label\"> #>             <label class=\"control-label\" id=\"na_action-label\" for=\"na_action\">NA action<\/label> #>             <div class=\"shiny-options-group\"> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"na_action\" value=\"a\" checked=\"checked\"/> #>                   <span>a<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"na_action\" value=\"b\"/> #>                   <span>b<\/span> #>                 <\/label> #>               <\/div> #>               <div class=\"radio\"> #>                 <label> #>                   <input type=\"radio\" name=\"na_action\" value=\"c\"/> #>                   <span>c<\/span> #>                 <\/label> #>               <\/div> #>             <\/div> #>           <\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Panel item widget ‚Äî panel_item","title":"Panel item widget ‚Äî panel_item","text":"Designed grouped using panel_group element. Used handle shiny inputs encoding panel.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panel item widget ‚Äî panel_item","text":"","code":"panel_item(title, ..., collapsed = TRUE, input_id = NULL)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Panel item widget ‚Äî panel_item","text":"title (character) title panel ... content panel collapsed (logical) optional, whether initially collapse panel input_id (character) optional name panel item element. supplied, register shiny input variable indicates whether panel item open collapsed accessed input$input_id.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Panel item widget ‚Äî panel_item","text":"(shiny.tag)","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/panel_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Panel item widget ‚Äî panel_item","text":"","code":"library(shiny) panel_item(   title = \"Display\",   collapsed = FALSE,   checkboxGroupInput(     \"check\",     \"Tables display\",     choices = LETTERS[1:3],     selected = LETTERS[1]   ),   radioButtons(     \"radio\",     label = \"Plot type\",     choices = letters[1:2],     selected = letters[1]   ) ) #> <div class=\"accordion-item\" data-value=\"Display\"> #>   <div class=\"accordion-header\"> #>     <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6396\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6396\"> #>       <div class=\"accordion-icon\"><\/div> #>       <div class=\"accordion-title\">Display<\/div> #>     <\/button> #>   <\/div> #>   <div id=\"bslib-accordion-panel-6396\" class=\"accordion-collapse collapse\"> #>     <div class=\"accordion-body\" open=\"TRUE\"> #>       <div id=\"check\" class=\"form-group shiny-input-checkboxgroup shiny-input-container\" role=\"group\" aria-labelledby=\"check-label\"> #>         <label class=\"control-label\" id=\"check-label\" for=\"check\">Tables display<\/label> #>         <div class=\"shiny-options-group\"> #>           <div class=\"checkbox\"> #>             <label> #>               <input type=\"checkbox\" name=\"check\" value=\"A\" checked=\"checked\"/> #>               <span>A<\/span> #>             <\/label> #>           <\/div> #>           <div class=\"checkbox\"> #>             <label> #>               <input type=\"checkbox\" name=\"check\" value=\"B\"/> #>               <span>B<\/span> #>             <\/label> #>           <\/div> #>           <div class=\"checkbox\"> #>             <label> #>               <input type=\"checkbox\" name=\"check\" value=\"C\"/> #>               <span>C<\/span> #>             <\/label> #>           <\/div> #>         <\/div> #>       <\/div> #>       <div id=\"radio\" class=\"form-group shiny-input-radiogroup shiny-input-container\" role=\"radiogroup\" aria-labelledby=\"radio-label\"> #>         <label class=\"control-label\" id=\"radio-label\" for=\"radio\">Plot type<\/label> #>         <div class=\"shiny-options-group\"> #>           <div class=\"radio\"> #>             <label> #>               <input type=\"radio\" name=\"radio\" value=\"a\" checked=\"checked\"/> #>               <span>a<\/span> #>             <\/label> #>           <\/div> #>           <div class=\"radio\"> #>             <label> #>               <input type=\"radio\" name=\"radio\" value=\"b\"/> #>               <span>b<\/span> #>             <\/label> #>           <\/div> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_basic_table_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","title":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","text":"function parse expression basic_table_args object.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_basic_table_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","text":"","code":"parse_basic_table_args(basic_table_args = teal.widgets::basic_table_args())"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_basic_table_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","text":"basic_table_args (basic_table_args) argument result resolve_basic_table_args().","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_basic_table_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","text":"(language) rtables::basic_table() filled additional arguments.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_basic_table_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parses basic_table_args object into the basic_table expression ‚Äî parse_basic_table_args","text":"","code":"parse_basic_table_args(   resolve_basic_table_args(     user_table = basic_table_args(title = \"TITLE\"),     user_default = basic_table_args(title = \"DEFAULT_TITLE\", subtitles = \"SUBTITLE\")   ) ) #> rtables::basic_table(title = \"TITLE\", subtitles = \"SUBTITLE\")"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_ggplot2_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","title":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","text":"function parse expression ggplot2_args object.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_ggplot2_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","text":"","code":"parse_ggplot2_args(   ggplot2_args = teal.widgets::ggplot2_args(),   ggtheme = c(\"default\", \"gray\", \"bw\", \"linedraw\", \"light\", \"dark\", \"minimal\", \"classic\",     \"void\", \"test\") )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_ggplot2_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","text":"ggplot2_args (ggplot2_args) argument result resolve_ggplot2_args(). ggtheme (character(1)) name ggplot2 theme applied, e.g. \"dark\".","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_ggplot2_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","text":"(list) three elements class languange: \"labs\", \"ggtheme\" \"theme\".","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/parse_ggplot2_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse ggplot2_args object into the ggplot2 expression ‚Äî parse_ggplot2_args","text":"","code":"parse_ggplot2_args(   resolve_ggplot2_args(ggplot2_args(     labs = list(title = \"TITLE\"),     theme = list(title = ggplot2::element_text(size = 20))   )) ) #> $labs #> ggplot2::labs(title = \"TITLE\") #>  #> $theme #> ggplot2::theme(title = list(family = NULL, face = NULL, colour = NULL,  #>     size = 20, hjust = NULL, vjust = NULL, angle = NULL, lineheight = NULL,  #>     margin = NULL, debug = NULL, inherit.blank = FALSE)) #>   parse_ggplot2_args(   resolve_ggplot2_args(     ggplot2_args(       labs = list(title = \"TITLE\"),       theme = list(title = ggplot2::element_text(size = 20))     )   ),   ggtheme = \"gray\" ) #> $labs #> ggplot2::labs(title = \"TITLE\") #>  #> $ggtheme #> ggplot2::theme_gray() #>  #> $theme #> ggplot2::theme(title = list(family = NULL, face = NULL, colour = NULL,  #>     size = 20, hjust = NULL, vjust = NULL, angle = NULL, lineheight = NULL,  #>     margin = NULL, debug = NULL, inherit.blank = FALSE)) #>"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Create choicesOpt for pickerInput ‚Äî picker_options","title":"Create choicesOpt for pickerInput ‚Äî picker_options","text":"Create choicesOpt pickerInput","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create choicesOpt for pickerInput ‚Äî picker_options","text":"","code":"picker_options(choices)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create choicesOpt for pickerInput ‚Äî picker_options","text":"choices (choices_labeled character) choices vector","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create choicesOpt for pickerInput ‚Äî picker_options","text":"(list) passed choicesOpt argument.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Optional content for optionalSelectInput ‚Äî picker_options_content","title":"Optional content for optionalSelectInput ‚Äî picker_options_content","text":"Prepares content displayed optionalSelectInput icons labels","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optional content for optionalSelectInput ‚Äî picker_options_content","text":"","code":"picker_options_content(var_name, var_label, var_type)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optional content for optionalSelectInput ‚Äî picker_options_content","text":"var_name (character) variable name var_label (character) variable alternative name - example variable label var_type (character) class variable.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/picker_options_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optional content for optionalSelectInput ‚Äî picker_options_content","text":"(character) HTML contents elements combined","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot-with-settings module ‚Äî plot_with_settings","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"Universal module plots settings height, width, download.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"","code":"plot_with_settings_ui(id)  plot_with_settings_srv(   id,   plot_r,   height = c(600, 200, 2000),   width = NULL,   show_hide_signal = reactive(TRUE),   brushing = FALSE,   clicking = FALSE,   dblclicking = FALSE,   hovering = FALSE,   graph_align = \"left\" )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"id (character(1)) shiny module id. plot_r (reactive function)reactive expression simple function draw plot. simple function needed e.g. base plots like plot(1) output can caught downloading. Take account simple functions less efficient reactive, catching result. height (numeric) optional vector three elements c(VAL, MIN, MAX), VAL starting value slider main expanded plot display. width (numeric) optional vector three elements c(VAL, MIN, MAX), VAL starting value slider main expanded plot display; NULL default display. show_hide_signal optional, (reactive logical mechanism allow modules call module show/hide plot_with_settings UI) brushing (logical) optional mechanism enable / disable brushing main plot. brushing data stored reactive object \"brush\" element returned list. See example details. clicking (logical) mechanism enable / disable clicking data points main plot. clicking data stored reactive object \"click\" element returned list. See example details. dblclicking (logical) optional mechanism enable / disable double-clicking data points main plot. double clicking data stored reactive object \"dblclick\" element returned list. See example details. hovering (logical(1)) optional mechanism enable / disable hovering data points main plot. hovering data stored reactive object \"hover\" element returned list. See example details. graph_align (character(1)) optional, one \"left\" (default), \"center\", \"right\" \"justify\". alignment graph main page.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"shiny module.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"default plot rendered 72 dpi. order change , example 96 set options(teal.plot_dpi = 96). minimum allowed dpi value 24 must whole number. invalid value set default value used warning outputted console.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/plot_with_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot-with-settings module ‚Äî plot_with_settings","text":"","code":"# Example using a reactive as input to plot_r library(shiny) library(ggplot2)  ui <- bslib::page_fluid(   plot_with_settings_ui(     id = \"plot_with_settings\"   ) )  server <- function(input, output, session) {   plot_r <- reactive({     ggplot(faithful, aes(x = .data$waiting, y = .data$eruptions)) +       geom_point()   })    plot_with_settings_srv(     id = \"plot_with_settings\",     plot_r = plot_r,     height = c(400, 100, 1200),     width = c(500, 250, 750)   ) }  if (interactive()) {   shinyApp(ui, server) }  # Example using a function as input to plot_r library(lattice)  ui <- bslib::page_fluid(   radioButtons(\"download_option\", \"Select the Option\", list(\"ggplot\", \"trellis\", \"grob\", \"base\")),   plot_with_settings_ui(     id = \"plot_with_settings\"   ),   sliderInput(\"nums\", \"Value\", 1, 10, 1) )  server <- function(input, output, session) {   plot_r <- function() {     numbers <- seq_len(input$nums)     if (input$download_option == \"ggplot\") {       ggplot(data.frame(n = numbers), aes(.data$n)) +         geom_bar()     } else if (input$download_option == \"trellis\") {       densityplot(numbers)     } else if (input$download_option == \"grob\") {       tr_plot <- densityplot(numbers)       ggplotGrob(         ggplot(data.frame(n = numbers), aes(.data$n)) +           geom_bar()       )     } else if (input$download_option == \"base\") {       plot(numbers)     }   }    plot_with_settings_srv(     id = \"plot_with_settings\",     plot_r = plot_r,     height = c(400, 100, 1200),     width = c(500, 250, 750)   ) }  if (interactive()) {   shinyApp(ui, server) }  # Example with brushing/hovering/clicking/double-clicking ui <- bslib::page_fluid(   plot_with_settings_ui(     id = \"plot_with_settings\"   ),   fluidRow(     column(4, tags$h3(\"Brush\"), verbatimTextOutput(\"brushing_data\")),     column(4, tags$h3(\"Click\"), verbatimTextOutput(\"clicking_data\")),     column(4, tags$h3(\"DblClick\"), verbatimTextOutput(\"dblclicking_data\")),     column(4, tags$h3(\"Hover\"), verbatimTextOutput(\"hovering_data\"))   ) )  server <- function(input, output, session) {   plot_r <- reactive({     ggplot(faithful, aes(x = .data$waiting, y = .data$eruptions)) +       geom_point()   })    plot_data <- plot_with_settings_srv(     id = \"plot_with_settings\",     plot_r = plot_r,     height = c(400, 100, 1200),     brushing = TRUE,     clicking = TRUE,     dblclicking = TRUE,     hovering = TRUE   )    output$brushing_data <- renderPrint(plot_data$brush())   output$clicking_data <- renderPrint(plot_data$click())   output$dblclicking_data <- renderPrint(plot_data$dblclick())   output$hovering_data <- renderPrint(plot_data$hover()) }  if (interactive()) {   shinyApp(ui, server) }  # Example which allows module to be hidden/shown library(\"shinyjs\")  ui <- bslib::page_fluid(   useShinyjs(),   actionButton(\"button\", \"Show/Hide\"),   plot_with_settings_ui(     id = \"plot_with_settings\"   ) )  server <- function(input, output, session) {   plot_r <- plot_r <- reactive(     ggplot(faithful, aes(x = .data$waiting, y = .data$eruptions)) +       geom_point()   )    show_hide_signal_rv <- reactiveVal(TRUE)    observeEvent(input$button, show_hide_signal_rv(!show_hide_signal_rv()))    plot_with_settings_srv(     id = \"plot_with_settings\",     plot_r = plot_r,     height = c(400, 100, 1200),     width = c(500, 250, 750),     show_hide_signal = reactive(show_hide_signal_rv())   ) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/print_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Print plot for download functionality ‚Äî print_plot","title":"Print plot for download functionality ‚Äî print_plot","text":"Print plot download functionality","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/print_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print plot for download functionality ‚Äî print_plot","text":"","code":"print_plot(plot, plot_type)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/print_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print plot for download functionality ‚Äî print_plot","text":"plot (reactive) reactive expression draw plot plot_type (reactive) reactive plot type (gg, trel, grob, )","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/print_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print plot for download functionality ‚Äî print_plot","text":"Nothing returned, plot printed.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"Resolving reducing multiple basic_table_args objects. function intended utilize user provided settings, defaults provided module creator also teal option. See Details, , understand logic.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"","code":"resolve_basic_table_args(   user_table = basic_table_args(),   user_default = basic_table_args(),   module_table = basic_table_args(),   app_default = getOption(\"teal.basic_table_args\", basic_table_args()) )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"user_table (basic_table_args) end user setup rtables::basic_table() specific table. Created basic_table_args() function. NULL value supported. user_default (basic_table_args) end user default setup rtables::basic_table() specific table. Created basic_table_args() function. NULL value supported. module_table (ggplot2_args) module creator setup rtables::basic_table() specific table. Created basic_table_args() function. NULL value supported. app_default (basic_table_args) Application level setting. Can NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"basic_table_args object.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"function picks first non NULL value argument, checking following order: basic_table_args argument provided end user. Per table (user_table) default (user_default) setup. app_default global R variable, teal.basic_table_args. module_table module creator setup.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_basic_table_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolves and reduces multiple basic_table_args objects ‚Äî resolve_basic_table_args","text":"","code":"resolve_basic_table_args(   user_table = basic_table_args(title = \"TITLE\"),   user_default = basic_table_args(title = \"DEFAULT_TITLE\", subtitles = \"SUBTITLE\") ) #> $title #> [1] \"TITLE\" #>  #> $subtitles #> [1] \"SUBTITLE\" #>  #> attr(,\"class\") #> [1] \"basic_table_args\""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"Resolving reducing multiple ggplot2_args objects. function intended utilize user provided settings, defaults provided module creator also teal option. See Details, , understand logic.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"","code":"resolve_ggplot2_args(   user_plot = ggplot2_args(),   user_default = ggplot2_args(),   module_plot = ggplot2_args(),   app_default = getOption(\"teal.ggplot2_args\", ggplot2_args()) )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"user_plot (ggplot2_args) end user setup theme labs specific plot. Created ggplot2_args() function. NULL value supported. user_default (ggplot2_args) end user setup module default theme labs. Created ggplot2_args() function. NULL value supported. module_plot (ggplot2_args) module creator setup theme labs specific plot. Created ggplot2_args() function. NULL value supported. app_default (ggplot2_args) Application level setting. Can NULL.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"ggplot2_args object.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"function picks first non NULL value argument, checking following order: ggplot2_args argument provided end user. Per plot (user_plot) default (user_default) setup. app_default global R variable, teal.ggplot2_args. module_plot module creator setup.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/resolve_ggplot2_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolving and reducing multiple ggplot2_args objects ‚Äî resolve_ggplot2_args","text":"","code":"resolve_ggplot2_args(   user_plot = ggplot2_args(     labs = list(title = \"TITLE\"),     theme = list(title = ggplot2::element_text(size = 20))   ),   user_default = ggplot2_args(     labs = list(x = \"XLAB\")   ) ) #> $labs #> $labs$title #> [1] \"TITLE\" #>  #> $labs$x #> [1] \"XLAB\" #>  #>  #> $theme #> $theme$title #> List of 11 #>  $ family       : NULL #>  $ face         : NULL #>  $ colour       : NULL #>  $ size         : num 20 #>  $ hjust        : NULL #>  $ vjust        : NULL #>  $ angle        : NULL #>  $ lineheight   : NULL #>  $ margin       : NULL #>  $ debug        : NULL #>  $ inherit.blank: logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  #>  #> attr(,\"class\") #> [1] \"ggplot2_args\""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/standard_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard UI layout ‚Äî standard_layout","title":"Standard UI layout ‚Äî standard_layout","text":"Create standard UI layout output right encoding panel left. layout used teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/standard_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard UI layout ‚Äî standard_layout","text":"","code":"standard_layout(   output,   encoding = NULL,   forms = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/standard_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard UI layout ‚Äî standard_layout","text":"output (shiny.tag) object output element (table, plot, listing) example returned shiny::plotOutput(). encoding (shiny.tag) object containing encoding elements. element NULL encoding side panel right  created. forms (tagList) example shiny::actionButton() placed encodings panel pre_output (shiny.tag) optional, text placed output put output context. example title. post_output (shiny.tag) optional, text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/standard_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard UI layout ‚Äî standard_layout","text":"object class shiny.tag UI code.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/standard_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard UI layout ‚Äî standard_layout","text":"","code":"library(shiny) standard_layout(   output = white_small_well(tags$h3(\"Tests\")),   encoding = tags$div(     tags$label(\"Encodings\", class = \"text-primary\"),     panel_item(       \"Tests\",       optionalSelectInput(         \"tests\",         \"Tests:\",         choices = c(           \"Shapiro-Wilk\",           \"Kolmogorov-Smirnov (one-sample)\"         ),         selected = \"Shapiro-Wilk\"       )     )   ),   forms = tagList(     verbatim_popup_ui(\"warning\", \"Show Warnings\"),     verbatim_popup_ui(\"rcode\", \"Show R code\")   ) ) #> <div class=\"container-fluid teal-widgets standard-layout-wrapper\"> #>   <div class=\"teal-widgets standard-layout has-encodings\"> #>     <div class=\"bslib-sidebar-layout bslib-mb-spacing html-fill-item\" data-bslib-sidebar-init=\"TRUE\" data-collapsible-desktop=\"true\" data-collapsible-mobile=\"true\" data-open-desktop=\"open\" data-open-mobile=\"closed\" data-require-bs-caller=\"layout_sidebar()\" data-require-bs-version=\"5\" style=\"--_sidebar-width:250px;\"> #>       <div class=\"main bslib-gap-spacing html-fill-container\"> #>         <div class=\"teal-widgets standard-layout\"> #>           <div class=\"standard-layout-pre-output\"><\/div> #>           <div class=\"standard-layout-output\"> #>             <div class=\"well well-sm\" style=\"background-color: white;\"> #>               <h3>Tests<\/h3> #>             <\/div> #>           <\/div> #>           <div class=\"standard-layout-post-output\"><\/div> #>         <\/div> #>       <\/div> #>       <aside id=\"bslib-sidebar-2554\" class=\"sidebar\" hidden> #>         <div class=\"sidebar-content bslib-gap-spacing\"> #>           <div> #>             <div> #>               <label class=\"text-primary\">Encodings<\/label> #>               <div class=\"accordion-item\" data-value=\"Tests\"> #>                 <div class=\"accordion-header\"> #>                   <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#bslib-accordion-panel-6703\" aria-expanded=\"false\" aria-controls=\"bslib-accordion-panel-6703\"> #>                     <div class=\"accordion-icon\"><\/div> #>                     <div class=\"accordion-title\">Tests<\/div> #>                   <\/button> #>                 <\/div> #>                 <div id=\"bslib-accordion-panel-6703\" class=\"accordion-collapse collapse\"> #>                   <div class=\"accordion-body\" open=\"FALSE\"> #>                     <div> #>                       <script> #>         $(function() { #>           $('#tests').on('change', function(e) { #>             var select_concat = $(this).val().length ? $(this).val().join(', ') : 'NULL'; #>             $('#tests_selected_text').html(select_concat); #>           }) #>         })<\/script> #>                       <div> #>                         <div id=\"tests_input\" style=\"display: block;\"> #>                           <div class=\"form-group shiny-input-container\"> #>                             <label class=\"control-label\" id=\"tests-label\" for=\"tests\">Tests:<\/label> #>                             <select data-actions-box=\"false\" data-none-selected-text=\"- Nothing selected -\" data-allow-clear=\"true\" data-max-options=\"1\" data-show-subtext=\"true\" data-live-search=\"false\" data-container=\"body\" data-state-input=\"true\" id=\"tests\" class=\"selectpicker form-control\" autocomplete=\"off\" multiple=\"multiple\"><option value=\"Shapiro-Wilk\" selected>Shapiro-Wilk<\/option> #> <option value=\"Kolmogorov-Smirnov (one-sample)\">Kolmogorov-Smirnov (one-sample)<\/option><\/select> #>                           <\/div> #>                         <\/div> #>                         <div id=\"tests_fixed\" style=\"display: none;\"> #>                           <label class=\"control-label\">Tests:<\/label> #>                           <code id=\"tests_selected_text\">Shapiro-Wilk<\/code> #>                         <\/div> #>                       <\/div> #>                     <\/div> #>                   <\/div> #>                 <\/div> #>               <\/div> #>             <\/div> #>             <div> #>               <br/> #>               <button class=\"btn btn-default action-button teal-widgets-busy-disable button\" id=\"warning-button\" type=\"button\">Show Warnings<\/button> #>               <button class=\"btn btn-default action-button teal-widgets-busy-disable button\" id=\"rcode-button\" type=\"button\">Show R code<\/button> #>             <\/div> #>           <\/div> #>         <\/div> #>       <\/aside> #>       <button class=\"collapse-toggle\" type=\"button\" title=\"Toggle sidebar\" aria-expanded=\"true\" aria-controls=\"bslib-sidebar-2554\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-left collapse-icon\" style=\"fill:currentColor;\" aria-hidden=\"true\" role=\"img\" ><path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"><\/path><\/svg><\/button> #>       <script data-bslib-sidebar-init>bslib.Sidebar.initCollapsibleAll()<\/script> #>     <\/div> #>   <\/div> #> <\/div>"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/table_with_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"table_with_settings module ‚Äî table_with_settings","title":"table_with_settings module ‚Äî table_with_settings","text":"Module designed create shiny table output based rtable object (ElementaryTable TableTree) input.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/table_with_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"table_with_settings module ‚Äî table_with_settings","text":"","code":"table_with_settings_ui(id, ...)  table_with_settings_srv(id, table_r, show_hide_signal = reactive(TRUE))"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/table_with_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"table_with_settings module ‚Äî table_with_settings","text":"id ID string corresponds ID used call module's UI function. ... (character) Useful providing additional HTML classes output tag. table_r (reactive) reactive expression yields rtable object (ElementaryTable TableTree) show_hide_signal (reactive logical) optional mechanism allow modules call module show/hide table_with_settings UI.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/table_with_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"table_with_settings module ‚Äî table_with_settings","text":"shiny module.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/table_with_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"table_with_settings module ‚Äî table_with_settings","text":"","code":"library(shiny) library(rtables) #> Loading required package: formatters #>  #> Attaching package: ‚Äòformatters‚Äô #> The following object is masked from ‚Äòpackage:base‚Äô: #>  #>     %||% #> Loading required package: magrittr #>  #> Attaching package: ‚Äòmagrittr‚Äô #> The following objects are masked from ‚Äòpackage:testthat‚Äô: #>  #>     equals, is_less_than, not #>  #> Attaching package: ‚Äòrtables‚Äô #> The following object is masked from ‚Äòpackage:utils‚Äô: #>  #>     str library(magrittr)  ui <- bslib::page_fluid(   table_with_settings_ui(     id = \"table_with_settings\"   ) )  server <- function(input, output, session) {   table_r <- reactive({     l <- basic_table() %>%       split_cols_by(\"ARM\") %>%       analyze(c(\"SEX\", \"AGE\"))      tbl <- build_table(l, DM)      tbl   })    table_with_settings_srv(id = \"table_with_settings\", table_r = table_r) }  if (interactive()) {   shinyApp(ui, server) }"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/teal.widgets-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.widgets: Custom widgets for teal applications ‚Äî teal.widgets-package","title":"teal.widgets: Custom widgets for teal applications ‚Äî teal.widgets-package","text":"teal.widgets package contains functionalities can used teal module development. package dedicated allow developers extend module functionality additional inputs output controls.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/reference/teal.widgets-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.widgets: Custom widgets for teal applications ‚Äî teal.widgets-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Pawel Rucki pawel.rucki@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Nikolas Burkoff Maciej Nasinski Konrad Pagacz Junlue Zhao contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/variable_type_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"Get icons represent variable types dataset","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/variable_type_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"","code":"variable_type_icons(var_type)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/variable_type_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"var_type (character) R internal types (classes).","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/variable_type_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get icons to represent variable types in dataset ‚Äî variable_type_icons","text":"(character) vector HTML icons corresponding  data type column.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/verbatim_popup.html","id":null,"dir":"Reference","previous_headings":"","what":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","title":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","text":"module consists button clicked pops modal window verbatim-styled text.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/verbatim_popup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","text":"","code":"verbatim_popup_ui(id, button_label, type = c(\"button\", \"link\"), ...)  verbatim_popup_srv(   id,   verbatim_content,   title,   style = FALSE,   disabled = shiny::reactiveVal(FALSE) )"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/verbatim_popup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","text":"id (character(1)) shiny id button_label (character(1)) text printed button type (character(1)) specifying whether use [shiny::actionButton()] [shiny::actionLink()]. ... additional arguments [shiny::actionButton()]([shiny::actionLink()]). verbatim_content (character, expression, condition reactive(1) holding ) content show popup modal window title (character(1)) title modal window style (logical(1)) whether style verbatim_content using styler::style_text. verbatim_content condition reactive holding condition argument ignored disabled (reactive(1)) shiny reactive value holding logical. popup button disabled flag TRUE enabled otherwise.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/verbatim_popup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","text":"UI function returns shiny.tag.list object","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/verbatim_popup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A shiny module that pops up verbatim text. ‚Äî verbatim_popup","text":"","code":"library(shiny)  ui <- bslib::page_fluid(verbatim_popup_ui(\"my_id\", button_label = \"Open popup\")) srv <- function(input, output) {   verbatim_popup_srv(     \"my_id\",     \"if (TRUE) { print('Popups are the best') }\",     title = \"My custom title\",     style = TRUE   ) } if (interactive()) shinyApp(ui, srv)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":null,"dir":"Reference","previous_headings":"","what":"Small well class for HTML ‚Äî white_small_well","title":"Small well class for HTML ‚Äî white_small_well","text":"Adds Small Well class overflow-x property HTML output element.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small well class for HTML ‚Äî white_small_well","text":"","code":"white_small_well(...)"},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Small well class for HTML ‚Äî white_small_well","text":"... arguments pass tag object's div attributes.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Small well class for HTML ‚Äî white_small_well","text":"HTML output element class Small Well overflow-x property","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Small well class for HTML ‚Äî white_small_well","text":"white_small_well intended used shiny::uiOutput(). overflow-x property set auto scroll bar added content overflows left right edges output window. example, useful displaying wide tables.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/reference/white_small_well.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small well class for HTML ‚Äî white_small_well","text":"","code":"white_small_well(shiny::htmlOutput(\"summary\")) #> <div class=\"well well-sm\" style=\"background-color: white;\"> #>   <div id=\"summary\" class=\"shiny-html-output\"><\/div> #> <\/div>"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"breaking-changes-0-4-3-9016","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.widgets 0.4.3.9016","text":"panel_group() panel_item() deprecated. Please use bslib::accordion() bslib::accordion_panel() instead. nested_closeable_modal() deprecated.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-4-3-9016","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.widgets 0.4.3.9016","text":"Recompute live-search option value dynamically updateOptionalSelectInput (#291)","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"tealwidgets-043","dir":"Changelog","previous_headings":"","what":"teal.widgets 0.4.3","title":"teal.widgets 0.4.3","text":"CRAN release: 2025-01-31","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"miscellaneous-0-4-3","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.widgets 0.4.3","text":"Improve documentation several functions adding examples. Fix several bugs related plot resizing. Fix bug plot_width given plot_with_settings.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"tealwidgets-042","dir":"Changelog","previous_headings":"","what":"teal.widgets 0.4.2","title":"teal.widgets 0.4.2","text":"CRAN release: 2023-12-14","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"enhancements-0-4-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.widgets 0.4.2","text":"Introduce nested_closeable_modal() can create nested popups inside already existing popup. Replaces examples runApp shinyApp. Ensure table_with_settings() synchronized latest update rtables, updated version dependency accordingly.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"tealwidgets-041","dir":"Changelog","previous_headings":"","what":"teal.widgets 0.4.1","title":"teal.widgets 0.4.1","text":"CRAN release: 2023-10-10","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"miscellaneous-0-4-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.widgets 0.4.1","text":"Documentation enhancements - code formatting package names R objects. Add grDevices Imports. Specified minimal version package dependencies. Improved logic documentation optionalSelectInput.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.widgets 0.4.0","text":"Fix rendering modal pop-plots.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"miscellaneous-0-4-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.widgets 0.4.0","text":"Removed scda package dependency examples. Update installation instructions README.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"enhancements-0-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.widgets 0.3.0","text":"Added support downloading base plots. Add support draggable_buckets use shinyvalidate input validation. disabled verbatim_popup_srv longer triggered button hidden. Added type argument verbatim_popup_ui allows pop-controlled button link.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.widgets 0.3.0","text":"Added labels pagination button table_with_settings fixed alt text. Fixed html structure panel_item function.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"miscellaneous-0-3-0","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.widgets 0.3.0","text":"Added shinytest2 tests plot_with_settings table_with_settings. Removed DRAFT label downloaded plots. Changed dependency type rtables Imports Suggests.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.widgets 0.2.0","text":"Updated panel_group panel_item functions longer optional shiny input.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"enhancements-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.widgets 0.2.0","text":"Updated standard_layout function contain class id output block. Added dim slot list returned plot_with_settings module. Added style argument verbatim_popup_srv control whether content styled using styler::style_text. condition objects can now displayed verbatim_popup.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.widgets 0.2.0","text":"Fixed bug verbatim_popup_srv disabled argument didn‚Äôt influence popup button. Fixed optionalSliderInput validation remove warning message certain cases.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.widgets 0.2.0","text":"Added new module - verbatim_popup.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.widgets 0.1.1","text":"Added new widget draggable_buckets.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.widgets 0.1.1","text":"option teal.plot_dpi controls dpi rendering downloading plots plot_with_settings. option used default 72dpi used (unchanged previous behavior).","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.widgets 0.1.1","text":"Fixed bug zooming browser cause plot grob object re-render instead displaying blank white space.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"miscellaneous-0-1-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.widgets 0.1.1","text":"Updated package authors.","code":""},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"tealwidgets-010","dir":"Changelog","previous_headings":"","what":"teal.widgets 0.1.0","title":"teal.widgets 0.1.0","text":"Initial release teal.widgets package providing shiny widgets teal applications.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.widgets/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Bug fixes","title":"teal.widgets 0.1.0","text":"Fixed location pagination toggle downloading tables using table_with_settings.","code":""}]
